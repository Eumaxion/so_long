---------------- Map checklist ----------------

''''''Does the map file exist ?
Is the map rectangular ?
All the lines should be the same length.
Is there something in the map file ?
Is the map enclosed in walls ?
Check the first and last lines and columns, they should all be 1
Is there only one exit ?
Simply count how many E you find on the map.
Is there only one start position ?
Simply count how many P you find on the map.
Is there at least one collectibles ?
Simply count how many C you find on the map.
is the exit accessible from the start position
are all the collectibles accessible from the start position

---------------- Game checklist ----------------

Create a window using MiniLibX
Create the required structure to store all the necessary information
Load all the required sprites (images) for your game and store them into memory
Create the different hooks
key_handler
mouse_handler (if necessary)
close_handler, this is a hook on the red cross that closes the program correctly
loop_hook (=> you game loop)

---------------- Render checklist ---------------- 

Draw the background
Draw the not movable parts of the map
Draw the player

---------------- Key handler ----------------

There's some things you have to think about before updating the player position.
Is the requested new position a Wall ?
if the new position is a Wall, don't do anything. The subject says that the player should not be able to go through walls
Is the requested new position inside the map ?
if the new position is outside the map, don't do anything. Normally this shouldn't happen since the map is enclosed in walls but hey, never too sure.
Is the requested new position a Collectible ?
if yes, update the collected items counter and check
check if all collectibles have been collected
if yes, unlock the exit
update your map 2D array and replace the collectible by a "floor" tile so that it is not drawn in the next iteration of the game loop.
If the requested new position is not a wall, nor a collectible, nor outside the map, simply set the player position to the requested new position.
